Create windows installer.
Notify to open 10000 UDP/TCP port.

Bugs:
 - tempos minimos e maximos (?)

Detailed error messages (i.e., timeout, etc).
Processar os dados:
 - Determinar o nome do experimento a partir de results.ts.txt
 - Determinar os clientes a partir de results.ts.<string>.<ext>
 - ext == pcap:
   - tshark -q -r <file> -z io,phs -z io,stat,1 # calcula o trafego por segundo e o resumo dos protocolos
   - tshark -q -r <file> -z io,phs -z io,stat,1 # calcula o trafego por segundo
   - Mensagens multicast: tela: ip.dst == 225.2.41.11 - tshark -q -r results.1219279067.192.168.1.3.pcap -z io,stat,0.1,ip.dst==225.2.41.11
                          arquivos: ip.dst == 225.2.41.12 - tshark -q -r results.1219279067.192.168.1.3.pcap -z io,stat,0.1,ip.dst==225.2.41.12
                          bcast: ip.dst == 224.40.40.42 - tshark -q -r results.1219279067.192.168.1.3.pcap -z io,stat,0.1,ip.dst==224.40.40.42

### graficos
 - Usar backend leve
 - Determinar quando o AP cai
   - Transfencia TCP por N minutos (?)
 - Marcar clientes que falharam durante o teste (ou na hora de mostrar?)
 - Instalar glib2 no windows.
-------------------------------------------------
- Mostrador visual do ultimo(s) teste
- Gerar graficos para cada host
- Criar "Quick Benchmark" e "Complete Benchmark"
- Mostrar status (numero de maquinas, AP, essid..)
- Periodic ping to see if clients are alive
- BUG: crashes when no clients are selected
- BUG: gtk pauses without activity
- BUG: full test: too long lines
- Remove tcl/tk/tkinter binary files.
- BUG: scroll client log
- Add experiment descriptions.
